version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.0.0

jobs:
  build-front:
    docker:
      - image: cimg/base:stable
    steps:
      - node/install
      - checkout
      - run:
          name: Front-End Install
          command: npm run frontend:install
      - run:
          name: Front-End build
          command: npm run frontend:build
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  
  test-front: 
    docker:
      - image: cimg/base:stable
    steps:
      - node/install
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Front-End test
          command: npm run frontend:test

  deploy-front: 
    docker:
      - image: cimg/base:stable
    steps:
      - node/install
      - checkout
      - aws-cli/setup:
          configure-default-region: true 
          configure-profile-region: false 
          disable-aws-pager: true 
          override-installed: false 
          aws-access-key-id: AWS_CLI_ACCESS_KEY_ID
          aws-secret-access-key: AWS_CLI_SECRET_ACCESS_KEY
          aws-region: AWS_CLI_REGION
          profile-name: aws-cli
      - attach_workspace:
          at: ~/project
      - run:
          name: Front-End Deploy
          command: npm run frontend:deploy
  cloud-invalidation: 
    docker:
      - image: cimg/base:stable
    steps:
      - node/install
      - checkout
      - aws-cli/setup:
          configure-default-region: true 
          configure-profile-region: false 
          disable-aws-pager: true 
          override-installed: false 
          aws-access-key-id: AWS_CLI_ACCESS_KEY_ID
          aws-secret-access-key: AWS_CLI_SECRET_ACCESS_KEY
          aws-region: AWS_CLI_REGION
          profile-name: aws-cli
      - attach_workspace:
          at: ~/project
      - run:
          name: Front-End Cloud Invalidation
          command: npm run frontend:invalidation

  build-back:
    docker:
      - image: cimg/base:stable
    steps:
      - node/install
      - checkout
      - aws-cli/setup:
          configure-default-region: true 
          configure-profile-region: true 
          disable-aws-pager: true 
          override-installed: false 
          aws-access-key-id: AWS_CLI_ACCESS_KEY_ID
          aws-secret-access-key: AWS_CLI_SECRET_ACCESS_KEY
          aws-region: AWS_CLI_REGION
          profile-name: aws-cli
      - run:
          name: Back-End Copy SSL Keys
          command: npm run backend:cert
      - run:
          name: Front-End Install
          command: npm run backend:install
      - run:
          name: Front-End build
          command: npm run backend:build
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  
  test-back: 
    docker:
      - image: cimg/base:stable
    steps:
      - node/install
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Back-End test
          command: npm run backend:test

  deploy-back: 
    docker:
      - image: cimg/base:stable
    steps:
      - node/install
      - checkout
      - aws-cli/setup:
          configure-default-region: true 
          configure-profile-region: true 
          disable-aws-pager: true 
          override-installed: false 
          aws-access-key-id: AWS_CLI_ACCESS_KEY_ID
          aws-secret-access-key: AWS_CLI_SECRET_ACCESS_KEY
          aws-region: AWS_CLI_REGION
          profile-name: aws-cli
      - run:
          name: Installing deployment dependencies
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python3-dev build-essential
            sudo pip3 install awsebcli
      - attach_workspace:
          at: ~/project
      - checkout
      - run:
          name: Back-End Deploy
          command: npm run backend:deploy

  
workflows:
  build-deploy:
    jobs:
      - build-front
      - test-front:
          requires:
            - build-front
      - build-back
      - test-back:
          requires:
            - build-back
      - deploy-front:
          requires:
            - test-front
          filters:
            branches:
              only: main
      - cloud-invalidation:
          requires:
            - deploy-front
      # - deploy-back:
      #     requires:
      #       - test-back
      #     filters:
      #       branches:
      #         only: main
      
