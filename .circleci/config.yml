
version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.0.0
jobs:
  FrontendEnvironment:
    docker:
      - image: cimg/base:stable
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - node/install
      - checkout
      - aws-cli/setup:
          configure-default-region: true 
          configure-profile-region: true 
          disable-aws-pager: true 
          override-installed: false 
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          profile-name: AWS_PROFILE_NAME
  BackendEnvironment:
    docker:
      - image: cimg/base:stable
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
    steps:
      - node/install
      - checkout
      - aws-cli/setup:
          configure-default-region: true 
          configure-profile-region: true 
          disable-aws-pager: true 
          override-installed: false 
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_REGION
          profile-name: AWS_PROFILE_NAME        
      - run:
          name: Installing deployment dependencies
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python3-dev Buildessential
            sudo pip3 install awsebcli
  BuildFrontend:
    steps:     
      - checkout
      - run:
          name: Front-End Install
          command: npm run frontend:install
      - run:
          name: Front-End Build
          command: npm run frontend:build
  BuildBackend:
    steps:
      - checkout
      - run:
          name: Back-End Install
          command: npm run backend:install
      - run:
          name: Back-End Build
          command: npm run backend:build
  Test-Frontend:
    steps:
      - run:
          name: Front-End Test
          command: npm run frontend:test:ci
  Test-Backend:
    steps:
      - run:
          name: Back-End Test
          command: npm run backend:test
  Deploy-Frontend:
    steps:
      - run:
          name: Front-End Deploy
          command: npm run frontend:deploy
  Deploy-Backend:
    steps:
      - run:
          name: Back-End Deploy
          command: npm run backend:deploy
workflows:
  version: 2.1
    jobs:
      - FrontendBuildTest:
          - FrontendEnvironment
          - BuildFrontend
      - BackendBuildTest:
          - BackendEnvironment
          - BuildBackend